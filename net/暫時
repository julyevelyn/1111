    /////////////////////////////////////////////////////////////////////影片動畫////////////////////////////////////////////////////////////////////////////////////////////

// 初始化动画
initAnimations();

// 监听窗口调整大小事件，重新初始化动画
window.addEventListener("resize", () => {
    // 在重新初始化前移除所有 ScrollTrigger
    ScrollTrigger.getAll().forEach(trigger => trigger.kill());
    initAnimations();
});

// 确保视频加载完成后，可以播放
video.addEventListener("canplay", () => {
    video.currentTime = 0;
    video.pause();
});

// 在视频加载时隐藏控制器
video.removeAttribute("controls");

// 避免未定义的 `videoElement` 报错
video.addEventListener("ended", () => {
    video.controls = false; // 隐藏控制器
});

window.addEventListener("load", () => {
    video.muted = true; // 确保静音，符合 Chrome 自动播放策略
    video.currentTime = 0; // 视频从头开始
    video.pause(); // 确保初始状态暂停
});

// 初始化 ScrollTrigger
ScrollTrigger.create({
    trigger: ".w",
    start: "top 1%",
    end: "bottom bottom",
    scrub: true,
    markers: false,
    onEnter: () => {
        if (!isPlaying && video.readyState >= 1) { // 如果视频未播放且已准备好
            video.play()
                .then(() => {
                    isPlaying = true; // 播放成功后标记状态
                })
                .catch((error) => {
                    console.error("Video play was interrupted:", error);
                });
        }
    },
    onLeave: () => {
        if (isPlaying) { // 如果视频正在播放
            video.pause();
            isPlaying = false; // 更新状态
        }
    },
    onLeaveBack: () => {
        if (isPlaying) { // 如果视频正在播放
            video.pause();
            isPlaying = false; // 更新状态
        }
    },
});

// 监听滚动事件，确保在返回页面时播放视频
ScrollTrigger.create({
    trigger: ".w",   // 再次使用 .title 区域作为触发器
    start: "top 5%",     // 当滚动到页面的 5% 位置时触发
    end: "bottom bottom",
    markers: false,
    onEnterBack: () => {
        if (!isPlaying && video.readyState >= 1) { // 如果视频未播放且已准备好
            video.play()
                .then(() => {
                    isPlaying = true; // 播放成功后标记状态
                })
                .catch((error) => {
                    console.error("Video play was interrupted:", error);
                });
        }
    }
});

/*///////////////////////////////////////////////////////////////////////work2///////////////////////////////////////////////////////////////////////////////////////*/

.work2 {
    display: flex; /* 统一使用 flexbox 布局 */
    flex-direction: row; /* 子元素按行排列，可根据需求改为 column */
    justify-content: space-between; /* 控制子元素的对齐 */
    align-items: center; /* 子元素垂直居中 */
    position: relative; /* 确保正常参与文档流 */
    height: 100vh;
    width: 100%;
    background-color: #000000;
    color: #ffffff;
    padding: 0 10vw; /* 增加左右内边距 */
}

.text2 {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 40%; /* 文本占宽度比例，可调整 */
    z-index: 2; /* 确保内容显示在最上方 */
    position: relative;
}

.box2 {
    flex: 1; /* 图片区域占剩余空间 */
    max-width: 60%; /* 限制最大宽度 */
    height: auto; /* 自适应高度 */
    position: relative; /* 避免脱离父容器 */
    z-index: 1;
}

.box2 img {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 15px;
}

.gradient-overlay3 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, rgb(1, 4, 17) 50%, rgba(3, 13, 49, 0) 70%);
    z-index: 0; /* 放在最底层 */
}

<section class="work1">
    <div class="gradient-overlay2"></div>
    <div class="text1">
        <h3>天秤宮</h3>
        <h4>高中時畫的作品，第一次嘗試複雜的背景繪製</h4>
    </div>
    <div class="box1"><img src="img/天秤宮.jpg" alt="天秤宮" ></div>
</section>